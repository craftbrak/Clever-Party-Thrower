# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on: [ push ]

jobs:
  Test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: ${ { secrets.DATABASE_PSW } }
          POSTGRES_USER: $DATABASE_USER
          POSTGRES_DB: $secrets.TEST_DATABASE_NAME

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # run steps required in the workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        run: npm install

      - name: migrate database
        run: npm run build
        env:
          TEST_DATABASE_NAME: $TEST_DATABASE_NAME
          DATABASE_HOST: $DATABASE_HOST
          DATABASE_PORT: $DATABASE_PORT
          DATABASE_USER: $DATABASE_USER
          DATABASE_PSW: ${{secrets.DATABASE_PSW}}
          DATABASE_NAME: $DATABASE_NAME
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          JWT_REFRESH_SECRET: ${{secrets.JWT_REFRESH_SECRET}}
          JWT_AUTH_TTL: $JWT_AUTH_TTL
          JWT_REFRESH_TTL: $JWT_REFRESH_TTL
          TWO_FACTOR_AUTHENTICATION_APP_NAME: $TWO_FACTOR_AUTHENTICATION_APP_NAME

      - name: Run the mock tests function
        run: npm run test
        env:
          TEST_DATABASE_NAME: $TEST_DATABASE_NAME
          DATABASE_HOST: $DATABASE_HOST
          DATABASE_PORT: $DATABASE_PORT
          DATABASE_USER: $DATABASE_USER
          DATABASE_PSW: ${{secrets.DATABASE_PSW}}
          DATABASE_NAME: $DATABASE_NAME
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          JWT_REFRESH_SECRET: ${{secrets.JWT_REFRESH_SECRET}}
          JWT_AUTH_TTL: $JWT_AUTH_TTL
          JWT_REFRESH_TTL: $JWT_REFRESH_TTL
          TWO_FACTOR_AUTHENTICATION_APP_NAME: $TWO_FACTOR_AUTHENTICATION_APP_NAME

