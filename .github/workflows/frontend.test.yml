name: Test frontend on github ans push to docker-hub

on:
  push:
    branches:
      - "*"

jobs:
  audit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: npm_audit
        continue-on-error: true
        run: |
          set +e
          npm audit
          exit_code=$?
          echo "::set-output name=audit_status::$exit_code"
          set -e

      - name: Create annotation if npm audit found issues
        if: steps.npm_audit.outputs.audit_status != '0'
        uses: actions/github-script@v5
        with:
          script: |
            const { repo: { owner, repo }, sha } = context;
            await github.checks.create({
              owner,
              repo,
              name: 'npm-audit',
              head_sha: sha,
              status: 'completed',
              conclusion: 'neutral',
              output: {
                title: 'npm audit found packages that need to be fixed',
                summary: 'Check the npm audit output for more details',
                annotations: [
                  {
                    path: 'package.json',
                    start_line: 1,
                    end_line: 1,
                    annotation_level: 'warning',
                    message: 'npm audit found packages that need to be fixed',
                  },
                ],
              },
            });
  build:
    needs: [ audit ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build angular app
        run: npm run build
  lint:
    needs: [ build ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Lint Angular app
        run: npm run lint

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front-end
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

  #      - name: Test Angular app
  #        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI
  build_docker_image:
    needs: [ lint, test, build ]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front-end

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --prod

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/clever-party-thrower-front-end:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/clever-party-thrower-front-end:latest


  build_and_push_to_dockerhub:
    needs: [ build_docker_image ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front-end

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --prod

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/clever-party-thrower-front-end:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/clever-party-thrower-front-end:latest