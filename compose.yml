version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgis/postgis
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Change this variable
      POSTGRES_DB: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  cpt-api:
    depends_on:
      - postgres
    container_name: cpt-api
    image: louisdewilde/clever-party-thrower-back-end:latest
    environment:
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PSW: ${POSTGRES_PASSWORD} # Change this variable
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      PORT: 8689
      TWO_FACTOR_AUTHENTICATION_APP_NAME: ${TWO_FACTOR_AUTHENTICATION_APP_NAME} # Change this variable if needed
      JWT_REFRESH_TTL: ${JWT_REFRESH_TTL} # Change this variable if needed
      JWT_AUTH_TTL: ${JWT_AUTH_TTL} # Change this variable if needed
      JWT_SECRET: ${JWT_SECRET} # Change this variable
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET} # Change this variable
      EMAIL_VERIFICATION_URL: ${API_URL} # Change this variable
      EMAIL_ADDRESS: ${EMAIL_ADDRESS} # Change this variable
      EMAIL_PASSWORD: ${EMAIL_PASSWORD} # Change this variable
      SMTP_SERVER: ${SMTP_SERVER} # Change this variable
      SMTP_PORT: ${SMTP_PORT} # Change this variable
      SMTP_SECURE: ${SMTP_SECURE} # Change this variable

    networks:
      - postgres
      - web
    restart: unless-stopped
    ports:
      - "8689:8689"

  cpt-web:
    container_name: cpt-web
    image: louisdewilde/clever-party-thrower-front-end:latest
    depends_on:
      - cpt-api
    ports:
      - "8080:80"
    environment:
      BACKEND_HOST: cpt-api.louisdewilde.be
      BACKEND_PORT: 443
    restart: unless-stopped
    networks:
      - web


  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 100 --cleanup

networks:
  postgres:
    driver: bridge
  web:
    driver: bridge

volumes:
  postgres:
